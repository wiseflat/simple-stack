---
- name: Install openssh package and configure the service
  ansible.builtin.include_tasks: install.yml

- name: Get openssh-version
  ansible.builtin.command: ssh -V
  register: sshd_version_raw
  changed_when: false
  check_mode: false

- name: Parse openssh-version
  ansible.builtin.set_fact:
    sshd_version: "{{ sshd_version_raw.stderr | regex_replace('.*_([0-9]*.[0-9]).*', '\\1') }}"

- name: Set default for ssh_host_key_files if not supplied
  ansible.builtin.include_tasks: crypto_hostkeys.yml
  when: ssh_host_key_files is undefined

- name: Set default for ssh_macs if not supplied
  ansible.builtin.include_tasks: crypto_macs.yml
  when: ssh_macs is undefined

- name: Set default for ssh_ciphers if not supplied
  ansible.builtin.include_tasks: crypto_ciphers.yml
  when: ssh_ciphers is undefined

- name: Set default for ssh_kex if not supplied
  ansible.builtin.include_tasks: crypto_kex.yml
  when: ssh_kex is undefined

- name: Create revoked_keys and set permissions to root/600
  ansible.builtin.template:
    src: revoked_keys.j2
    dest: /etc/ssh/revoked_keys
    mode: "0600"
    owner: "{{ ssh_owner }}"
    group: "{{ ssh_group }}"
  notify: Restart sshd

- name: Create sshd_config and set permissions to root/600
  ansible.builtin.template:
    src: opensshd.conf.j2
    dest: "{{ ssh_server_config_file }}"
    mode: "0600"
    owner: "{{ ssh_owner }}"
    group: "{{ ssh_group }}"
    validate: "{{ sshd_path }} -T -C user=root -C host=localhost -C addr=localhost -C lport=22 -f %s"
  notify: Restart sshd

- name: Disable dynamic MOTD
  community.general.pamd:
    name: sshd
    type: session
    control: optional
    module_path: pam_motd.so
    state: absent
    backup: true
  when:
    - ssh_pam_support | bool
    - not (ssh_print_pam_motd | bool)

- name: Create ssh_config and set permissions to root/644
  ansible.builtin.template:
    src: openssh.conf.j2
    dest: "{{ ssh_client_config_file }}"
    mode: "0644"
    owner: "{{ ssh_owner }}"
    group: "{{ ssh_group }}"

- name: Check if for weak DH parameters in {{ sshd_moduli_file }}
  ansible.builtin.shell: awk '$5 < {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }}
  register: sshd_register_moduli
  changed_when: false
  check_mode: false

- name: Remove all small primes # noqa no-changed-when
  ansible.builtin.shell: >
    awk '$5 >= {{ sshd_moduli_minimum }}' {{ sshd_moduli_file }} > {{ sshd_moduli_file }}.new ; [ -r {{ sshd_moduli_file }}.new
    -a -s {{ sshd_moduli_file }}.new ] && mv {{ sshd_moduli_file }}.new {{ sshd_moduli_file }} || true
  notify: Restart sshd
  when:
    - sshd_register_moduli.stdout is truthy

- name: Include tasks to setup ca keys and principals
  ansible.builtin.include_tasks: ca_keys_and_principals.yml
  when:
    - ssh_trusted_user_ca_keys_file | length > 0
    - ssh_trusted_user_ca_keys | length > 0

- name: Enable or disable sshd service
  ansible.builtin.service:
    name: "{{ sshd_service_name }}"
    enabled: "{{ ssh_server_service_enabled }}"

- name: Set custom ssh keys to default ansible user
  ansible.builtin.include_tasks: user.yml
