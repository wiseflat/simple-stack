---
- name: "Certificate | Create TLS directory on target"
  ansible.builtin.file:
    path: "{{ nomad_tls_host_certificate_dir }}"
    state: directory
    mode: '0755'

- name: "Certificate | Copy Public certs on nodes - {{ nomad_tls_ca_pubkey }}"
  ansible.builtin.copy:
    src: "{{ nomad_tls_ca_host_dir }}/{{ nomad_tls_ca_pubkey }}"
    dest: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_ca_pubkey }}"
    owner: "root"
    group: "root"
    mode: "0640"

- name: Nomad | Copy certificate on server (or both) nodes
  when: nomad_node_role in ['server', 'both']
  block:
    - name: "Nomad | Check if TLS cert exists for Servers"
      ansible.builtin.stat:
        path: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_cert_server }}"
      register: cert_tls_server_present

    - name: "Nomad | Get information on generated certificate for Servers"
      community.crypto.x509_certificate_info:
        path: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_cert_server }}"
        valid_at:
          delay: "{{ nomad_tls_check_delay }}"
      register: tls_check_server
      when: cert_tls_server_present.stat.exists

    - name: "Nomad | TLS Configuration for Servers"
      ansible.builtin.import_role:
        name: certificate
        tasks_from: client
      vars:
        certificate_ca_pubkey: "{{ nomad_tls_ca_pubkey }}"
        certificate_ca_privatekey: "{{ nomad_tls_ca_privatekey }}"
        certificate_ca_provider: "{{ nomad_tls_ca_provider }}"
        certificate_ca_host: "{{ nomad_tls_ca_host }}"
        certificate_cert: "{{ nomad_tls_cert_server }}"
        certificate_client_privatekey: "{{ nomad_tls_privatekey_server }}"
        certificate_common_name: "{{ nomad_tls_common_name_server }}"
        certificate_subject_alt_name: "{{ nomad_tls_subject_alt_name_server }}"
      run_once: true
      when: not cert_tls_server_present.stat.exists or (cert_tls_server_present.stat.exists and not tls_check_server.valid_at.delay)

    - name: "Nomad | Copy certificates on server nodes"
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: "{{ nomad_group }}"
        mode: "0640"
      loop:
        - src: "{{ nomad_tls_ca_host_dir }}/{{ nomad_tls_privatekey_server }}"
          dest: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_privatekey_server }}"
        - src: "{{ nomad_tls_ca_host_dir }}/{{ nomad_tls_cert_server }}"
          dest: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_cert_server }}"
      notify: Nomad_restart

- name: Nomad | Copy certificate on client nodes
  when: nomad_node_role in ['client', 'both']
  block:
    - name: "Nomad | Check if TLS cert exists for Client"
      ansible.builtin.stat:
        path: "{{ nomad_tls_ca_host_dir }}{{ nomad_tls_cert_client }}"
      register: cert_tls_client_present

    - name: "Nomad | Get information on generated certificate for Clients"
      community.crypto.x509_certificate_info:
        path: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_cert_client }}"
        valid_at:
          delay: "{{ nomad_tls_check_delay }}"
      register: tls_check_client
      when: cert_tls_client_present.stat.exists

    - name: "Nomad | TLS Configuration for Clients"
      ansible.builtin.import_role:
        name: certificate
        tasks_from: client
      vars:
        certificate_ca_pubkey: "{{ nomad_tls_ca_pubkey }}"
        certificate_ca_privatekey: "{{ nomad_tls_ca_privatekey }}"
        certificate_ca_provider: "{{ nomad_tls_ca_provider }}"
        certificate_ca_host: "{{ nomad_tls_ca_host }}"
        certificate_cert: "{{ nomad_tls_cert_client }}"
        certificate_client_privatekey: "{{ nomad_tls_privatekey_client }}"
        certificate_common_name: "{{ nomad_tls_common_name_client }}"
        certificate_subject_alt_name: "{{ nomad_tls_subject_alt_name_client }}"
      # when: nomad_mode == 'cluster'

    - name: "Nomad | Copy certificates on client nodes"
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: "{{ nomad_group }}"
        mode: "0640"
      loop:
        - src: "{{ nomad_tls_ca_host_dir }}/{{ nomad_tls_cert_client }}"
          dest: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_cert_client }}"
        - src: "{{ nomad_tls_ca_host_dir }}/{{ nomad_tls_privatekey_client }}"
          dest: "{{ nomad_tls_host_certificate_dir }}/{{ nomad_tls_privatekey_client }}"
      notify: Nomad_restart
