---
- name: Coredns | Create temporary build directory
  ansible.builtin.file:
    path: "{{ item }}"
    recurse: true
    state: directory
    mode: '0755'
  loop:
    - "{{ build_work_dir }}/download"
    - "{{ build_work_dir }}/{{ upstream_default_arch }}"

- name: Coredns | Download Github release
  ansible.builtin.get_url:
    url: "{{ upstream_file_url }}"
    dest: "{{ build_work_dir }}/download/"
    mode: '0644'
  register: download_result

- name: Coredns | Unarchive GitHub release
  ansible.builtin.unarchive:
    src: "{{ build_work_dir }}/download/{{ upstream_file_name }}"
    dest: "{{ build_work_dir }}/download"
    remote_src: true
  when: download_result.changed

- name: Coredns | Copy binary
  ansible.builtin.copy:
    src: "{{ build_work_dir }}/download/coredns"
    dest: /usr/local/bin/coredns
    owner: root
    group: root
    mode: '0755'
    remote_src: true

- name: Coredns | Clean up
  ansible.builtin.file:
    path: "{{ build_work_dir }}"
    state: absent

- name: Coredns | Backup software version
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      cat << EOF
      "{{ latest_version }}"
      EOF
    dest: "/etc/ansible/facts.d/{{ image.name }}.fact"
    owner: root
    group: root
    mode: '0755'
