---
- name: Promtail | Create temporary directories
  ansible.builtin.file:
    path: "{{ item }}"
    recurse: true
    state: directory
    mode: '0755'
  loop:
    - "{{ build_work_dir }}/download"
    - "{{ build_work_dir }}/{{ upstream_default_arch }}"

- name: Promtail | Download Github release
  ansible.builtin.get_url:
    url: "{{ upstream_file_url }}"
    dest: "{{ build_work_dir }}/download/"
    mode: '0644'
    force: no
  register: download_result

- name: Promtail | Unarchive GitHub release
  ansible.builtin.unarchive:
    src: "{{ build_work_dir }}/download/{{ upstream_file_name }}"
    dest: "{{ build_work_dir }}/download"
    remote_src: true
  when: download_result.changed

- name: Promtail | Find binary
  ansible.builtin.include_role:
    name: upstream
    tasks_from: find-binary
  loop:
    - "{{ image.upstream.binary }}-linux-{{ upstream_default_arch }}"

- name: Promtail | Copy binary
  ansible.builtin.copy:
    src: "{{ build_work_dir }}/{{ upstream_default_arch }}/{{ image.upstream.binary }}-linux-{{ upstream_default_arch }}"
    dest: /usr/local/bin/promtail
    owner: root
    group: root
    mode: '0755'
    remote_src: true

- name: Promtail | Update software version
  software_version:
    software: "{{ image_name }}"
    version: "{{ image_version }}"
    file_path: /etc/ansible/facts.d/software_version.fact

- name: Promtail | Clean up
  ansible.builtin.file:
    path: "{{ build_work_dir }}"
    state: absent
