---
- name: Install mandatories packages
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - python3-pip
      - lsb-release
    state: present
    install_recommends: false
  register: apt_status
  until: apt_status is success
  delay: 6
  retries: 10

- name: Get docker gpg signed key
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: /etc/apt/keyrings/docker.asc

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ upstream_default_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Install Docker
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose
      - docker-compose-plugin
      - docker-buildx-plugin
    state: present
    install_recommends: false
  register: apt_status
  until: apt_status is success
  delay: 6
  retries: 10

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ docker_user }}"
    groups: docker
    append: true
  notify: Docker_restart

- name: Copy config.json
  ansible.builtin.template:
    src: config.json.j2
    dest: "{{ docker_private_registry_config }}"
    owner: root
    group: root
    mode: '0600'
  when: docker_private_registry_state
  notify: Docker_restart

- name: Copy daemon.json for DNS resolution
  ansible.builtin.template:
    src: daemon.json.j2
    dest: "{{ docker_conf_dir }}/daemon.json"
    owner: root
    group: root
    mode: '0600'
  when: docker_dns_configuration
  notify: Docker_restart
