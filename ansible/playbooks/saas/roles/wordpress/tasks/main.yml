---
- name: Create default directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - "/data/{{ domain }}/var/www/html"
    - "/data/{{ domain }}/var/log/nginx"
    - "/data/{{ domain }}/var/log/php-fpm"
    - "/data/{{ domain }}/etc/nginx/sites-enabled"
    - "/data/{{ domain }}/etc/php-fpm.d"
    - "/data/{{ domain }}/run/php-fpm"

- name: Inspect mariadb container
  community.docker.docker_container_info:
    name: mariadb
  register: docker_inspect

- name: Set fact
  ansible.builtin.set_fact:
    service: "{{ docker_inspect.container.NetworkSettings.Ports['3306/tcp'][0] }}"
    mariadb_password_from_env: "{{ docker_inspect.container.Config.Env | select('search', '^MARIADB_ROOT_PASSWORD=') | first | default('') }}"

- name: Create mysql database
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mariadb_password_from_env.split('=')[1] }}"
    login_host: "{{ service.HostIp }}"
    login_port: "{{ service.HostPort }}"
    name: "{{ wordpress_db_name }}"
    encoding: utf8
    collation: utf8_general_ci
    state: present

- name: Create mysql user
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ mariadb_password_from_env.split('=')[1] }}"
    login_host: "{{ service.HostIp }}"
    login_port: "{{ service.HostPort }}"
    name: "{{ wordpress_db_user }}"
    host: 'localhost'
    column_case_sensitive: false
    password: "{{ wordpress_db_password }}"
    priv: "{{ wordpress_db_name }}.*:ALL"
    state: present

- name: Test if config file exists
  ansible.builtin.stat:
    path: "/data/{{ domain }}/var/www/html/wp-config.php"
  register: stat_result

- name: Install wordpress
  ansible.builtin.include_tasks: install.yml
  when: not stat_result.stat.exists

- name: Create default directory
  ansible.builtin.file:
    path: "/data/{{ domain }}/etc/php-fpm.d/{{ item.id }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop: "{{ wordpress_scale.phpfpm }}"

- name: Copy phpfpm config file
  ansible.builtin.template:
    src: phpfpm.conf
    dest: "/data/{{ domain }}/etc/php-fpm.d/{{ item.id }}/www.conf"
    mode: '0644'
  loop: "{{ wordpress_scale.phpfpm }}"

- name: Create phpfpm container
  community.docker.docker_container:
    name: "{{ domain }}-phpfpm-{{ item.id }}"
    image: "{{ wordpress_phpfpm_image }}"
    state: "{{ item.state }}"
    recreate: false
    restart_policy: always
    labels:
      ansible_app_role: php-fpm
      traefik.enable: "false"
    env:
      WORDPRESS_DB_PASSWORD: "{{ wordpress_db_password }}"
    mounts:
      - type: bind
        target: /run/php-fpm
        source: "/data/{{ domain }}/run/php-fpm"
        read_only: false
      - type: bind
        target: /var/log/php-fpm
        source: "/data/{{ domain }}/var/log/php-fpm"
        read_only: false
      - type: bind
        target: /run/mysqld
        source: "/data/mariadb/run/mysqld"
        read_only: false
    pull: never
    volumes:
      - "/data/{{ domain }}/etc/php-fpm.d/{{ item.id }}:/etc/php83/php-fpm.d:ro"
      - "/data/{{ domain }}/var/www/html:/var/www/html"
  loop: "{{ wordpress_scale.phpfpm }}"

- name: Copy nginx config file
  ansible.builtin.template:
    src: nginx.conf
    dest: "/data/{{ domain }}/etc/nginx/sites-enabled/default.conf"
    mode: '0644'
  loop: "{{ wordpress_scale.nginx }}"

- name: Create nginx container
  community.docker.docker_container:
    name: "{{ domain }}-nginx-{{ item.id }}"
    image: "{{ wordpress_nginx_image }}"
    state: "{{ item.state }}"
    recreate: false
    restart_policy: always
    published_ports:
      - 172.17.0.1:0:80
    labels: "{{ wordpress_traefik_labels }}"
    mounts:
      - type: bind
        target: /run/php-fpm
        source: "/data/{{ domain }}/run/php-fpm"
        read_only: false
      - type: bind
        target: /var/www/html
        source: "/data/{{ domain }}/var/www/html"
        read_only: true
    pull: never
    volumes:
      - "/data/{{ domain }}/etc/nginx/sites-enabled:/etc/nginx/sites-enabled:ro"
  loop: "{{ wordpress_scale.nginx }}"

- name: Set secret variable
  set_fact:
    secret:
      name: "{{ domain }}"
      username: "{{ wordpress_site.admin_name }}"
      pass: "{{ wordpress_site.admin_password }}"
      group: "demo/{{ software }}"
      url: "https://{{ domain }}"
