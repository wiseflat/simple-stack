---
- name: Build a docker image
  hosts: "{{ hosts_limit | default('infrastructure') }}"
  become: true
  gather_facts: true
  vars_prompt:
    - name: catalog
      prompt: catalog item
      private: false
  vars:
    build_work_dir: /tmp/{{ catalog }}
    architecture_map:
      amd64: amd64
      x86_64: amd64
      armv7l: arm
      aarch64: arm64
      arm64: arm64
    upstream_default_arch: "{{ architecture_map[ansible_facts.architecture] }}"
    path: "/tmp/{{ catalog }}"

  pre_tasks:
    - name: Copy docker config file
      ansible.builtin.copy:
        content: |
          {
              "auths": {
                  "{{ docker_private_registry.url }}": {
                      "auth": "{{ (docker_private_registry.username + ':' + docker_private_registry.password) | b64encode }}"
                  }
              }
          }
        dest: /root/.docker/config.json
        owner: root
        group: root
        mode: '0600'

    - name: Create temporary build directory
      ansible.builtin.file:
        path: "{{ item }}"
        recurse: true
        state: directory
        mode: '0755'
      loop:
        - "{{ build_work_dir }}/download"
        - "{{ build_work_dir }}/{{ upstream_default_arch }}"

  tasks:
    - name: Install dependencies
      ansible.builtin.include_role:
        name: "{{ catalog }}"
        tasks_from: build

    - name: Debug latest version
      ansible.builtin.debug:
        msg: "{{ image_version }}"
        verbosity: 1

    - name: Build
      when: image_build
      block:
        - name: Build image
          community.docker.docker_image_build:
            name: "{{ docker_private_registry.url }}/{{ image_name }}:{{ image_version }}"
            tag: latest
            path: "/tmp/{{ catalog }}"
            dockerfile: Dockerfile
            labels: "{{ image_labels }}"
            rebuild: always
            outputs:
              - type: image
                push: true
          register: docker_image_build

        - name: Debug
          ansible.builtin.debug:
            msg: "{{ docker_image_build }}"
            verbosity: 1

    - name: Update catalog item version on UI
      ansible.builtin.uri:
        url: "{{ simple_stack.ui }}/api"
        user: mgarcia@wiseflat.com
        password: azerty123456
        method: POST
        body_format: json
        body:
          schema: catalogs_create
          data:
            name: "{{ image_name }}"
            version: "{{ image_version }}"
        force_basic_auth: true
        status_code: 200
      ignore_errors: true
      delegate_to: localhost
      become: false