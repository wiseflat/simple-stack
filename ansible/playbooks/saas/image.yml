---
- name: Build a docker image
  hosts: "{{ hosts_limit | default('infrastructure') }}"
  become: true
  gather_facts: true
  vars_prompt:
    - name: software
      prompt: software name
      private: false
  vars:
    build_work_dir: /tmp/{{ software }}
    architecture_map:
      amd64: amd64
      x86_64: amd64
      armv7l: arm
      aarch64: arm64
      arm64: arm64
    upstream_default_arch: "{{ architecture_map[ansible_facts.architecture] }}"
    path: "/tmp/{{ software }}"

  pre_tasks:
    - name: Create temporary build directory
      ansible.builtin.file:
        path: "{{ item }}"
        recurse: true
        state: directory
        mode: '0755'
      loop:
        - "{{ build_work_dir }}/download"
        - "{{ build_work_dir }}/{{ upstream_default_arch }}"

  tasks:
    - name: Install dependencies
      ansible.builtin.include_role:
        name: "{{ software }}"
        tasks_from: build

    - name: Debug latest version
      ansible.builtin.debug:
        msg: "{{ image_version }}"
        verbosity: 1

    - name: Build
      when: image_build
      block:
        - name: Build image
          community.docker.docker_image_build:
            name: "{{ image_name }}:{{ image_version }}"
            tag: latest
            path: "/tmp/{{ software }}"
            dockerfile: Dockerfile
            labels: "{{ image_labels }}"
            rebuild: always
            outputs:
              - type: docker
                # push: false
          register: docker_image_build

        - name: Debug
          ansible.builtin.debug:
            msg: "{{ docker_image_build }}"
            verbosity: 1

    - name: Update software version
      software_version:
        software: "{{ image_name }}"
        version: "{{ image_version }}"
        file_path: /etc/ansible/facts.d/software_version.fact
