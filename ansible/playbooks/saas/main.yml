---
- name: Deploy an application
  any_errors_fatal: true
  hosts: "{{ hosts_limit | default('infrastructure') }}"
  gather_facts: true
  become: true
  vars_prompt:
    - name: catalog
      prompt: Catalog item
      private: false
    - name: domain
      prompt: Domain name
      private: false
    - name: confirmation
      prompt: You are going to configure a software on {{ play_hosts | length }} servers.
              Answer "yes" to confirm, something else to abort.
      private: false
      default: "yes"
  vars:
    software_path: "/data/{{ domain }}"
    service_name: "{{ domain | replace('-', '') | replace('.', '') }}"
  pre_tasks:
    - name: Fail if you didn't confirm
      ansible.builtin.fail:
        msg: You didn't answered "yes". Aborting.
      when: confirmation != "yes"

    - name: Get software variables
      ansible.builtin.set_fact:
        software: "{{ lookup('simple-stack-ui', type='software', key=domain, subkey='', missing='warn') | from_json }}"

    - name: Debug software
      ansible.builtin.debug:
        msg: "{{ software }}"

  tasks:
    - name: Deploy service
      ansible.builtin.include_role:
        name: "{{ catalog }}"

  post_tasks:
    - name: Update software version
      ansible.builtin.uri:
        url: "{{ lookup('ansible.builtin.env', 'SIMPLE_STACK_UI_URL') }}/api"
        user: "{{ lookup('ansible.builtin.env', 'SIMPLE_STACK_UI_USER') }}"
        password: "{{ lookup('ansible.builtin.env', 'SIMPLE_STACK_UI_PASSWORD') }}"
        method: POST
        body_format: json
        body:
          schema: softwares_update_version/{{ software.id }}
          data:
            version: "{{ softwares[catalog].version }}"
        force_basic_auth: true
        status_code: 200
      ignore_errors: true
      delegate_to: localhost
      become: false
